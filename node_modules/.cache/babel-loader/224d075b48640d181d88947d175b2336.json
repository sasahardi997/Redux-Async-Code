{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nimport { uiActions } from './ui-slice';\nimport axios from 'axios';\nconst cartSlice = createSlice({\n  name: 'cart',\n  initialState: {\n    items: [],\n    totalQuantity: 0\n  },\n  reducers: {\n    addItemToCart(state, action) {\n      const newItem = action.payload;\n      const existingItem = state.items.find(item => item.id === newItem.id);\n      state.totalQuantity++;\n\n      if (!existingItem) {\n        state.items.push({\n          id: newItem.id,\n          price: newItem.price,\n          quantity: 1,\n          totalPrice: newItem.price,\n          name: newItem.title\n        });\n      } else {\n        existingItem.quantity++;\n        existingItem.totalPrice = existingItem.totalPrice + newItem.price;\n      }\n    },\n\n    removeItemFromCart(state, action) {\n      const id = action.payload;\n      const existingItem = state.items.find(item => item.id === id);\n      state.totalQuantity--;\n\n      if (existingItem.quantity === 1) {\n        state.items = state.items.filter(item => item.id !== id);\n      } else {\n        existingItem.quantity--;\n        existingItem.totalPrice = existingItem.totalPrice - existingItem.price;\n      }\n    }\n\n  }\n});\n\nconst sendCartData = cart => {\n  return dispatch => {\n    dispatch(uiActions.showNotification({\n      status: 'pending',\n      title: 'Sending...',\n      message: 'Sending cart data!'\n    }));\n    axios.put(\"https://react-hooks-c25a3-default-rtdb.europe-west1.firebasedatabase.app/cart.json\", cart).then(res => {\n      dispatch(uiActions.showNotification({\n        status: 'success',\n        title: 'Success!',\n        message: 'Sending cart data successfully!'\n      }));\n    }).catch(error => {\n      dispatch(uiActions.showNotification({\n        status: 'error',\n        title: 'Error!',\n        message: 'Sending cart data failed!'\n      }));\n    });\n  };\n};\n\nexport const cartActions = cartSlice.actions;\nexport default cartSlice;","map":{"version":3,"sources":["C:/Users/Hardi1997/Desktop/01-starting-project/src/store/cart-slice.js"],"names":["createSlice","uiActions","axios","cartSlice","name","initialState","items","totalQuantity","reducers","addItemToCart","state","action","newItem","payload","existingItem","find","item","id","push","price","quantity","totalPrice","title","removeItemFromCart","filter","sendCartData","cart","dispatch","showNotification","status","message","put","then","res","catch","error","cartActions","actions"],"mappings":"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","sourcesContent":["import {createSlice} from '@reduxjs/toolkit';\r\nimport { uiActions } from './ui-slice';\r\nimport axios from 'axios';\r\n\r\nconst cartSlice = createSlice({\r\n    name: 'cart',\r\n    initialState:{\r\n        items: [],\r\n        totalQuantity: 0\r\n        \r\n    },\r\n    reducers: {\r\n        addItemToCart(state, action){\r\n            const newItem = action.payload;\r\n            const existingItem = state.items.find(item => item.id === newItem.id);\r\n            state.totalQuantity++;\r\n            if(!existingItem){\r\n                state.items.push({\r\n                    id: newItem.id, \r\n                    price: newItem.price, \r\n                    quantity: 1, \r\n                    totalPrice: newItem.price,\r\n                    name: newItem.title\r\n                });\r\n            } else{\r\n                existingItem.quantity++;\r\n                existingItem.totalPrice = existingItem.totalPrice + newItem.price\r\n            }\r\n        },\r\n        removeItemFromCart(state, action){\r\n            const id = action.payload;\r\n            const existingItem = state.items.find(item => item.id === id);\r\n            state.totalQuantity--;\r\n            if(existingItem.quantity === 1){\r\n                state.items = state.items.filter(item => item.id !== id);\r\n            } else {\r\n                existingItem.quantity--;\r\n                existingItem.totalPrice = existingItem.totalPrice - existingItem.price;\r\n            }\r\n        },\r\n    },\r\n});\r\n\r\nconst sendCartData = (cart) => {\r\n    return (dispatch) => {\r\n        dispatch(\r\n            uiActions.showNotification({\r\n                status: 'pending',\r\n                title: 'Sending...',\r\n                message: 'Sending cart data!'\r\n            })\r\n        );\r\n\r\n        axios.put(\"https://react-hooks-c25a3-default-rtdb.europe-west1.firebasedatabase.app/cart.json\", cart)\r\n        .then(res => {\r\n          dispatch(uiActions.showNotification({\r\n            status: 'success',\r\n            title: 'Success!',\r\n            message: 'Sending cart data successfully!'\r\n          }))\r\n        }).catch(error => {\r\n          dispatch(uiActions.showNotification({\r\n            status: 'error',\r\n            title: 'Error!',\r\n            message: 'Sending cart data failed!'\r\n          }))\r\n        });\r\n    }\r\n};\r\n\r\nexport const cartActions = cartSlice.actions;\r\n\r\nexport default cartSlice;"]},"metadata":{},"sourceType":"module"}